[
    {
        "model": "LitNASBench101(\n  (model): NASBench101FullModel(\n    (stem): Sequential(\n      (0): Conv2d(3, 224, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n      (1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (2): ReLU()\n    )\n    (cells): ModuleList(\n      (0): SingleCell(\n        (node_layers): ModuleList(\n          (0): Sequential(\n            (0): Conv2d(224, 224, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n            (1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (1): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)\n          (2): Sequential(\n            (0): Conv2d(224, 224, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n            (1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (3): Sequential(\n            (0): Conv2d(224, 224, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n            (1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (4): Sequential(\n            (0): Conv2d(224, 224, kernel_size=(1, 1), stride=(1, 1))\n            (1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n        )\n      )\n      (1): SingleCell(\n        (node_layers): ModuleList(\n          (0): Sequential(\n            (0): Conv2d(224, 224, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n            (1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (1): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)\n          (2): Sequential(\n            (0): Conv2d(224, 224, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n            (1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (3): Sequential(\n            (0): Conv2d(224, 224, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n            (1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (4): Sequential(\n            (0): Conv2d(224, 224, kernel_size=(1, 1), stride=(1, 1))\n            (1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n        )\n      )\n      (2): SingleCell(\n        (node_layers): ModuleList(\n          (0): Sequential(\n            (0): Conv2d(224, 224, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n            (1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (1): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)\n          (2): Sequential(\n            (0): Conv2d(224, 224, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n            (1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (3): Sequential(\n            (0): Conv2d(224, 224, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n            (1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (4): Sequential(\n            (0): Conv2d(224, 224, kernel_size=(1, 1), stride=(1, 1))\n            (1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n        )\n      )\n      (3): SingleCell(\n        (node_layers): ModuleList(\n          (0): Sequential(\n            (0): Conv2d(448, 448, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n            (1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (1): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)\n          (2): Sequential(\n            (0): Conv2d(448, 448, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n            (1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (3): Sequential(\n            (0): Conv2d(448, 448, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n            (1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (4): Sequential(\n            (0): Conv2d(448, 448, kernel_size=(1, 1), stride=(1, 1))\n            (1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n        )\n      )\n      (4): SingleCell(\n        (node_layers): ModuleList(\n          (0): Sequential(\n            (0): Conv2d(448, 448, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n            (1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (1): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)\n          (2): Sequential(\n            (0): Conv2d(448, 448, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n            (1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (3): Sequential(\n            (0): Conv2d(448, 448, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n            (1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (4): Sequential(\n            (0): Conv2d(448, 448, kernel_size=(1, 1), stride=(1, 1))\n            (1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n        )\n      )\n      (5): SingleCell(\n        (node_layers): ModuleList(\n          (0): Sequential(\n            (0): Conv2d(448, 448, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n            (1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (1): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)\n          (2): Sequential(\n            (0): Conv2d(448, 448, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n            (1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (3): Sequential(\n            (0): Conv2d(448, 448, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n            (1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (4): Sequential(\n            (0): Conv2d(448, 448, kernel_size=(1, 1), stride=(1, 1))\n            (1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n        )\n      )\n      (6): SingleCell(\n        (node_layers): ModuleList(\n          (0): Sequential(\n            (0): Conv2d(896, 896, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n            (1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (1): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)\n          (2): Sequential(\n            (0): Conv2d(896, 896, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n            (1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (3): Sequential(\n            (0): Conv2d(896, 896, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n            (1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (4): Sequential(\n            (0): Conv2d(896, 896, kernel_size=(1, 1), stride=(1, 1))\n            (1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n        )\n      )\n      (7): SingleCell(\n        (node_layers): ModuleList(\n          (0): Sequential(\n            (0): Conv2d(896, 896, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n            (1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (1): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)\n          (2): Sequential(\n            (0): Conv2d(896, 896, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n            (1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (3): Sequential(\n            (0): Conv2d(896, 896, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n            (1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (4): Sequential(\n            (0): Conv2d(896, 896, kernel_size=(1, 1), stride=(1, 1))\n            (1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n        )\n      )\n      (8): SingleCell(\n        (node_layers): ModuleList(\n          (0): Sequential(\n            (0): Conv2d(896, 896, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n            (1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (1): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)\n          (2): Sequential(\n            (0): Conv2d(896, 896, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n            (1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (3): Sequential(\n            (0): Conv2d(896, 896, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n            (1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (4): Sequential(\n            (0): Conv2d(896, 896, kernel_size=(1, 1), stride=(1, 1))\n            (1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n        )\n      )\n    )\n    (downsampling_layers): ModuleList(\n      (0): Sequential(\n        (0): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n        (1): Conv2d(224, 448, kernel_size=(1, 1), stride=(1, 1))\n        (2): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (3): ReLU()\n      )\n      (1): Sequential(\n        (0): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n        (1): Conv2d(448, 896, kernel_size=(1, 1), stride=(1, 1))\n        (2): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (3): ReLU()\n      )\n      (2): Sequential(\n        (0): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n        (1): Conv2d(896, 1792, kernel_size=(1, 1), stride=(1, 1))\n        (2): BatchNorm2d(1792, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (3): ReLU()\n      )\n    )\n    (global_pool): AdaptiveAvgPool2d(output_size=(1, 1))\n    (fc): Linear(in_features=1792, out_features=10, bias=True)\n  )\n  (criterion): CrossEntropyLoss()\n)",
        "epochs_info": {
            "2": {
                "training_time": 45.311667124430336,
                "validation_accuracy": 0.10409989207983017
            },
            "4": {
                "training_time": 90.19300079345703,
                "validation_accuracy": 0.34248130520184833
            },
            "6": {
                "training_time": 108.1433334350586,
                "validation_accuracy": 0.12980769326289496
            },
            "12": {
                "training_time": 217.3393351236979,
                "validation_accuracy": 0.4865785340468089
            },
            "18": {
                "training_time": 307.0870056152344,
                "validation_accuracy": 0.446915070215861
            },
            "36": {
                "training_time": 614.0153605143229,
                "validation_accuracy": 0.8980368574460348
            },
            "54": {
                "training_time": 883.5320027669271,
                "validation_accuracy": 0.8061231176058451
            },
            "108": {
                "training_time": 1768.7849527994792,
                "validation_accuracy": 0.9264155824979147
            }
        },
        "num_params": 90708362
    },
    {
        "model": "LitNASBench101(\n  (model): NASBench101FullModel(\n    (stem): Sequential(\n      (0): Conv2d(3, 224, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n      (1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (2): ReLU()\n    )\n    (cells): ModuleList(\n      (0): SingleCell(\n        (node_layers): ModuleList(\n          (0): Sequential(\n            (0): Conv2d(224, 224, kernel_size=(1, 1), stride=(1, 1))\n            (1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (1): Sequential(\n            (0): Conv2d(224, 224, kernel_size=(1, 1), stride=(1, 1))\n            (1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (2): Sequential(\n            (0): Conv2d(224, 224, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n            (1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (3): Sequential(\n            (0): Conv2d(224, 224, kernel_size=(1, 1), stride=(1, 1))\n            (1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (4): Sequential(\n            (0): Conv2d(224, 224, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n            (1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n        )\n      )\n      (1): SingleCell(\n        (node_layers): ModuleList(\n          (0): Sequential(\n            (0): Conv2d(224, 224, kernel_size=(1, 1), stride=(1, 1))\n            (1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (1): Sequential(\n            (0): Conv2d(224, 224, kernel_size=(1, 1), stride=(1, 1))\n            (1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (2): Sequential(\n            (0): Conv2d(224, 224, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n            (1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (3): Sequential(\n            (0): Conv2d(224, 224, kernel_size=(1, 1), stride=(1, 1))\n            (1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (4): Sequential(\n            (0): Conv2d(224, 224, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n            (1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n        )\n      )\n      (2): SingleCell(\n        (node_layers): ModuleList(\n          (0): Sequential(\n            (0): Conv2d(224, 224, kernel_size=(1, 1), stride=(1, 1))\n            (1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (1): Sequential(\n            (0): Conv2d(224, 224, kernel_size=(1, 1), stride=(1, 1))\n            (1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (2): Sequential(\n            (0): Conv2d(224, 224, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n            (1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (3): Sequential(\n            (0): Conv2d(224, 224, kernel_size=(1, 1), stride=(1, 1))\n            (1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (4): Sequential(\n            (0): Conv2d(224, 224, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n            (1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n        )\n      )\n      (3): SingleCell(\n        (node_layers): ModuleList(\n          (0): Sequential(\n            (0): Conv2d(448, 448, kernel_size=(1, 1), stride=(1, 1))\n            (1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (1): Sequential(\n            (0): Conv2d(448, 448, kernel_size=(1, 1), stride=(1, 1))\n            (1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (2): Sequential(\n            (0): Conv2d(448, 448, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n            (1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (3): Sequential(\n            (0): Conv2d(448, 448, kernel_size=(1, 1), stride=(1, 1))\n            (1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (4): Sequential(\n            (0): Conv2d(448, 448, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n            (1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n        )\n      )\n      (4): SingleCell(\n        (node_layers): ModuleList(\n          (0): Sequential(\n            (0): Conv2d(448, 448, kernel_size=(1, 1), stride=(1, 1))\n            (1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (1): Sequential(\n            (0): Conv2d(448, 448, kernel_size=(1, 1), stride=(1, 1))\n            (1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (2): Sequential(\n            (0): Conv2d(448, 448, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n            (1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (3): Sequential(\n            (0): Conv2d(448, 448, kernel_size=(1, 1), stride=(1, 1))\n            (1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (4): Sequential(\n            (0): Conv2d(448, 448, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n            (1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n        )\n      )\n      (5): SingleCell(\n        (node_layers): ModuleList(\n          (0): Sequential(\n            (0): Conv2d(448, 448, kernel_size=(1, 1), stride=(1, 1))\n            (1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (1): Sequential(\n            (0): Conv2d(448, 448, kernel_size=(1, 1), stride=(1, 1))\n            (1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (2): Sequential(\n            (0): Conv2d(448, 448, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n            (1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (3): Sequential(\n            (0): Conv2d(448, 448, kernel_size=(1, 1), stride=(1, 1))\n            (1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (4): Sequential(\n            (0): Conv2d(448, 448, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n            (1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n        )\n      )\n      (6): SingleCell(\n        (node_layers): ModuleList(\n          (0): Sequential(\n            (0): Conv2d(896, 896, kernel_size=(1, 1), stride=(1, 1))\n            (1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (1): Sequential(\n            (0): Conv2d(896, 896, kernel_size=(1, 1), stride=(1, 1))\n            (1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (2): Sequential(\n            (0): Conv2d(896, 896, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n            (1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (3): Sequential(\n            (0): Conv2d(896, 896, kernel_size=(1, 1), stride=(1, 1))\n            (1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (4): Sequential(\n            (0): Conv2d(896, 896, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n            (1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n        )\n      )\n      (7): SingleCell(\n        (node_layers): ModuleList(\n          (0): Sequential(\n            (0): Conv2d(896, 896, kernel_size=(1, 1), stride=(1, 1))\n            (1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (1): Sequential(\n            (0): Conv2d(896, 896, kernel_size=(1, 1), stride=(1, 1))\n            (1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (2): Sequential(\n            (0): Conv2d(896, 896, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n            (1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (3): Sequential(\n            (0): Conv2d(896, 896, kernel_size=(1, 1), stride=(1, 1))\n            (1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (4): Sequential(\n            (0): Conv2d(896, 896, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n            (1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n        )\n      )\n      (8): SingleCell(\n        (node_layers): ModuleList(\n          (0): Sequential(\n            (0): Conv2d(896, 896, kernel_size=(1, 1), stride=(1, 1))\n            (1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (1): Sequential(\n            (0): Conv2d(896, 896, kernel_size=(1, 1), stride=(1, 1))\n            (1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (2): Sequential(\n            (0): Conv2d(896, 896, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n            (1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (3): Sequential(\n            (0): Conv2d(896, 896, kernel_size=(1, 1), stride=(1, 1))\n            (1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n          (4): Sequential(\n            (0): Conv2d(896, 896, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n            (1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (2): ReLU()\n          )\n        )\n      )\n    )\n    (downsampling_layers): ModuleList(\n      (0): Sequential(\n        (0): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n        (1): Conv2d(224, 448, kernel_size=(1, 1), stride=(1, 1))\n        (2): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (3): ReLU()\n      )\n      (1): Sequential(\n        (0): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n        (1): Conv2d(448, 896, kernel_size=(1, 1), stride=(1, 1))\n        (2): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (3): ReLU()\n      )\n      (2): Sequential(\n        (0): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n        (1): Conv2d(896, 1792, kernel_size=(1, 1), stride=(1, 1))\n        (2): BatchNorm2d(1792, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (3): ReLU()\n      )\n    )\n    (global_pool): AdaptiveAvgPool2d(output_size=(1, 1))\n    (fc): Linear(in_features=1792, out_features=10, bias=True)\n  )\n  (criterion): CrossEntropyLoss()\n)",
        "epochs_info": {
            "2": {
                "training_time": 31.692000071207683,
                "validation_accuracy": 0.1011284738779068
            },
            "4": {
                "training_time": 64.21899922688802,
                "validation_accuracy": 0.113882211347421
            },
            "6": {
                "training_time": 75.83999888102214,
                "validation_accuracy": 0.20462739964326224
            },
            "12": {
                "training_time": 151.71766662597656,
                "validation_accuracy": 0.4142962098121643
            },
            "18": {
                "training_time": 210.11500040690103,
                "validation_accuracy": 0.18743322292963663
            },
            "36": {
                "training_time": 420.4079996744792,
                "validation_accuracy": 0.8081931074460348
            },
            "54": {
                "training_time": 602.9190063476562,
                "validation_accuracy": 0.5494791567325592
            },
            "108": {
                "training_time": 1206.1500244140625,
                "validation_accuracy": 0.8946314255396525
            }
        },
        "num_params": 68594858
    }
]